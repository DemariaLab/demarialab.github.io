name: build-website

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # Schedule the workflow to run at midnight every day
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/cache@v4.0.2
        with:
         path: ~/gems
         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
         restore-keys: |
          ${{ runner.os }}-gems-
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r python_generator/requirements.txt

      - name: Install Firefox
        run: |
          sudo snap remove firefox
          sudo install -d -m 0755 /etc/apt/keyrings
          wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc > /dev/null
          echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | sudo tee -a /etc/apt/sources.list.d/mozilla.list > /dev/null
          echo '
          Package: *
          Pin: origin packages.mozilla.org
          Pin-Priority: 1000
          ' | sudo tee /etc/apt/preferences.d/mozilla
          sudo apt update && sudo apt install -y --allow-downgrades firefox

      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        
      - name: Run Python generator
        env:
          CUSTOM_NEWS_ARTICLES_DOC_ID: ${{ secrets.CUSTOM_NEWS_ARTICLES_DOC_ID }}
          MEMBERS_SHEET_ID: ${{ secrets.MEMBERS_SHEET_ID }}
          PHOTOS_SHEET_ID: ${{ secrets.PHOTOS_SHEET_ID }}
          SELECTED_PUBLICATIONS_SHEET_ID: ${{ secrets.SELECTED_PUBLICATIONS_SHEET_ID }}
          RESEARCH_DOC_ID: ${{ secrets.RESEARCH_DOC_ID }}
          GRANTS_SHEET_ID: ${{ secrets.GRANTS_SHEET_ID }}
          HERO_ACCORDION_ITEMS: ${{ secrets.HERO_ACCORDION_ITEMS }}
        run: |
          python -m python_generator --site_dir ./ --custom_news_articles_doc_id $CUSTOM_NEWS_ARTICLES_DOC_ID --members_sheet_id $MEMBERS_SHEET_ID --photos_sheet_id $PHOTOS_SHEET_ID --selected_publications_sheet_id $SELECTED_PUBLICATIONS_SHEET_ID --grants_sheet_id $GRANTS_SHEET_ID --hero_accordion_id $HERO_ACCORDION_ITEMS --research_doc_id $RESEARCH_DOC_ID
      

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: |
            bundle exec jekyll build --source . --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      - name: Upload generated python files
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}
          git add .
          git commit -m 'Add generated files'
          git push origin main
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
